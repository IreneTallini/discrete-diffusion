defaults:
  - graph_generator: random_tree
  - _self_

data:
  _target_: discrete_diffusion.data.datamodule.SyntheticGraphDataModule

  graph_generator: ${nn.graph_generator}

  datasets:
    train:
      _target_: discrete_diffusion.data.graph_dataset.GraphDataset

    val:
      _target_: discrete_diffusion.data.graph_dataset.GraphDataset

    test:
      _target_: discrete_diffusion.data.graph_dataset.GraphDataset

  gpus: ${train.trainer.gpus}
  overfit: True

  num_workers:
    train: 8
    val: 4
    test: 4

  batch_size:
    train: 1
    val: 1
    test: 1

  val_percentage: 0.1


module:
  _target_: discrete_diffusion.pl_modules.stochastic_pl_module.StochasticPLModule
  batch_size: ${nn.data.batch_size}
  num_nodes_samples: -1 #-1 random, n > 0 fix
  margin: 1.
  # latent_space_folder: ${oc.env:PROJECT_ROOT}/data/latent_space
  dataset_name: ${nn.graph_generator.graph_type}

  model:
    _target_: discrete_diffusion.modules.autoencoder.autoencoder_stochastic_decoder.AutoencoderStochasticDecoder
    enc_channels: 128
    latent_channels: 128
    dec_channels: 128

  optimizer:
    _target_: torch.optim.Adam
    lr: 1e-4

  # lr_scheduler:
  #  _target_: torch.optim.lr_scheduler.CosineAnnealingWarmRestarts
  #  T_0: 10
  #  T_mult: 2
  #  eta_min: 0 # min value for the lr
  #  last_epoch: -1
  #  verbose: False
